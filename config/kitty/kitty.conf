# To get a full list of supported fonts use the `kitty list-fonts` command.
# To get the PostScript name for a font, use `kitty + list-fonts --psnames`
# Also: `kitty --debug-font-fallback`
# Another:
#   fc-list : family spacing outline scalable \
#   | grep -e spacing=100 -e spacing=90 \
#   | grep -e outline=True \
#   | grep -e scalable=True

# To use nerdfont icons, just install them but don't make them the default one.
# Kitty will pick them up.
font_family      JetBrains Mono Regular
bold_font        JetBrains Mono Bold
italic_font      JetBrains Mono Italic
bold_italic_font JetBrains Mono Bold Italic

# Fira Code characters are being shifted to the top
# font_family      Fira Code Regular
# bold_font        Fira Code Bold
# italic_font      JetBrains Mono Italic
# bold_italic_font JetBrains Mono Bold Italic

# Font size (in pts)
font_size 15.0

# Change the size of each character cell kitty renders. You can use
# either numbers, which are interpreted as pixels or percentages
# (number followed by %), which are interpreted as percentages of the
# unmodified values. You can use negative pixels or percentages less
# than 100% to reduce sizes (but this might cause rendering
# artifacts).
# adjust_line_height  -6
# adjust_column_width 0

# Map the specified unicode codepoints to a particular font. Syntax is:
#     symbol_map codepoints Font Family Name

# https://github.com/yamatsum/nonicons
#     cd ~/git/nonicons
#     git pull upstream master
#     cp dist/nonicons.ttf ~/Library/Fonts/
# symbol_map U+F101-U+F208 nonicon

# https://github.com/microsoft/vscode-codicons/blob/main/dist/codicon.css
#     npm -g install/upgrade vscode-codicons
#     cp dist/codicon.ttf ~/Library/Fonts
# symbol_map U+EA60-U+EBD1 codicon

# Available: never, always, cursor
disable_ligatures never

# Cursor customization
cursor_shape block

# The interval (in seconds) at which to blink the cursor. Set to zero
# to disable blinking. Negative values mean use system default.
cursor_blink_interval 0

# Number of lines of history to keep in memory for scrolling back.
scrollback_lines 10000

# Copy to clipboard or a private buffer on select. With this set to
# clipboard, simply selecting text with the mouse will cause the text
# to be copied to clipboard. Useful on platforms such as macOS that
# do not have the concept of primary selections. You can instead
# specify a name such as a1 to copy to a private kitty buffer
# instead. Map a shortcut with the paste_from_buffer action to paste
# from this private buffer. For example::

# copy_on_select a1
# map cmd+shift+v paste_from_buffer a1

# Note that copying to the clipboard is a security risk, as all
# programs, including websites open in your browser can read the
# contents of the system clipboard.

# Possible values: write-clipboard, read-clipboard, write-primary,
# read-primary, no-append
clipboard_control write-clipboard write-primary no-append

# Enable/disable the audio bell. Useful in environments that require silence.
enable_audio_bell no

# Flash the screen when a bell occurs for the specified number of seconds.
# Set to zero to disable.
visual_bell_duration 0.0

# Request window attention on bell. Makes the dock icon bounce on
# macOS or the taskbar flash on linux.
# window_alert_on_bell yes

remember_window_size yes

# The window margin (in pts) to use when only a single window is visible.
# A single value sets all four sides. Two values set the vertical and horizontal
# sides. Three values set top, horizontal and bottom. Four values set top, right,
# bottom and left.
single_window_margin_width 0

# Fade the text in inactive windows by the specified amount (a number
# between zero and one, with zero being fully faded).
# inactive_text_alpha 1.0

# Hide the window decorations (title-bar and window borders) with
# yes. On macOS, titlebar-only can be used to only hide the titlebar.
hide_window_decorations yes

# Color scheme
include gruvbox-material-dark-medium.conf

# The opacity of the background. A number between 0 and 1,
# where 1 is opaque and 0 is fully transparent.
background_opacity 1.0

# Delay (in milliseconds) before input from the program running in the terminal
# is processed. Note that decreasing it will increase responsiveness, but also
# increase CPU usage and might cause flicker in full screen programs that redraw
# the entire screen on each loop, because kitty is so fast that partial screen
# updates will be drawn.
input_delay 3

# Sync screen updates to the refresh rate of the monitor. This
# prevents tearing (https://en.wikipedia.org/wiki/Screen_tearing)
# when scrolling. However, it limits the rendering speed to the
# refresh rate of your monitor. With a very high speed
# mouse/high keyboard repeat rate, you may notice some slight
# input latency. If so, set this to no.
sync_to_monitor no

# Periodically check if an update to kitty is available. Set to zero to disable.
update_check_interval 168

# The value of the TERM environment variable to set.
# term xterm-kitty

# Use the option key as an alt key. With this set to no, kitty will
# use the macOS native Option+Key = unicode character behavior.
# Available: left, right, both, no
macos_option_as_alt left

# Use the traditional full-screen transition, that is faster, but less pretty.
macos_traditional_fullscreen yes

# Show or hide the window title in the macOS window or menu-bar.
# Available: window, menubar, all, none
macos_show_window_title_in menubar

# You can change the font size for all top-level kitty OS windows at
# a time or only the current one.
map cmd+plus change_font_size all +1.0
map cmd+minus change_font_size all -1.0
map cmd+0 change_font_size all 0
map cmd+shift+r load_config_file

# Open URL with cmd + left mouse click
mouse_map  cmd+left release grabbed,ungrabbed mouse_click_url

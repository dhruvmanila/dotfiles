# dotbot completion                                        -*- shell-script -*-

# This bash completions script was generated by
# completely (https://github.com/dannyben/completely)
# Modifying it manually is not recommended

_dotbot_completions_filter() {
  local words="$1"
  local cur=${COMP_WORDS[COMP_CWORD]}
  local result=()

  if [[ "${cur:0:1}" == "-" ]]; then
    echo "$words"
  
  else
    for word in $words; do
      [[ "${word:0:1}" != "-" ]] && result+=("$word")
    done

    echo "${result[*]}"

  fi
}

_dotbot_completions() {
  local cur=${COMP_WORDS[COMP_CWORD]}
  local compwords=("${COMP_WORDS[@]:1:$COMP_CWORD-1}")
  local compline="${compwords[*]}"

  case "$compline" in
    'upgrade'*)
      while read -r; do COMPREPLY+=( "$REPLY" ); done < <( compgen -W "$(_dotbot_completions_filter "--help --ref -h -r all brew cargo mac neovim nnn npm plugins python")" -- "$cur" )
      ;;

    'shell'*)
      while read -r; do COMPREPLY+=( "$REPLY" ); done < <( compgen -W "$(_dotbot_completions_filter "--help -h")" -- "$cur" )
      ;;

    'setup'*)
      while read -r; do COMPREPLY+=( "$REPLY" ); done < <( compgen -W "$(_dotbot_completions_filter "--help -h")" -- "$cur" )
      ;;

    'link'*)
      while read -r; do COMPREPLY+=( "$REPLY" ); done < <( compgen -W "$(_dotbot_completions_filter "--force --help -f -h")" -- "$cur" )
      ;;

    'sync'*)
      while read -r; do COMPREPLY+=( "$REPLY" ); done < <( compgen -W "$(_dotbot_completions_filter "--brew --cargo --help --node --python -b -c -h -n -p")" -- "$cur" )
      ;;

    *)
      while read -r; do COMPREPLY+=( "$REPLY" ); done < <( compgen -W "$(_dotbot_completions_filter "--help --version -h -v link setup shell sync upgrade")" -- "$cur" )
      ;;

  esac
} &&
complete -F _dotbot_completions dotbot

# ex: filetype=sh

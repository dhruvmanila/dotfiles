#!/usr/bin/env bash
# vim: set ft=sh:

# Source: https://unix.stackexchange.com/a/26059/289772
#
#   > You don't need export if the variable is already in the environment: any
#   > change of the value of the variable is reflected in the environment.¹ PATH
#   > is pretty much always in the environment; all unix systems set it very early
#   > on (usually in the very first process, in fact).

# PATH {{{

# After all the headaches, I've decided to contruct the $PATH variable myself.
# Let's see how far we can go :)

pathmunge() { # {{{
  # The goal of this function is to avoid duplication in the PATH environment
  # variable. By default, it will prepend to PATH but by passing "after" as the
  # second argument, it will append to PATH.
  #
  # $1 (string): full path to be added
  # $2 (string): which end of PATH to add to (use "after" to append)
  case ":$PATH:" in
    *":$1:"*) ;;
    *)
      if [ "$2" = "after" ]; then
        PATH=$PATH:$1
      else
        PATH=$1:$PATH
      fi
      ;;
  esac
}
# }}}

# To get the default system PATH which is set by `path_helper` script, run the
# following command from `bash_profile`:
#
#   /usr/libexec/path_helper -s
#
# Some packages may add a file in /etc/paths.d which contains the path to be
# added to the PATH variable.
PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"

# Brew installed packages which are not symlinked into /usr/local because a
# similar software is already provided by the system.
#
# In other words, these are keg-only and if we want to use the binaries from
# these packages, their bin directory needs to be added first in the PATH.
pathmunge "$(brew --prefix)/opt/llvm/bin"
pathmunge "$(brew --prefix)/opt/sqlite/bin"

# https://pypa.github.io/pipx/installation/
#
#   > The default binary location for pipx-installed apps is `~/.local/bin`.
#   > This can be overridden with the environment variable `PIPX_BIN_DIR`.
#   >
#   > pipx's default virtual environment location is `~/.local/pipx`.
#   > This can be overridden with the environment variable `PIPX_HOME`.
#
# This will also be used to store custom scripts available in `dotfiles/bin`
# directory.
pathmunge "${HOME}/.local/bin"

# https://github.com/golang/go/wiki/SettingGOPATH#bash
export GOPATH="${HOME}/go"
pathmunge "${GOPATH}/bin"

# https://www.rust-lang.org/tools/install
export CARGO_HOME="${HOME}/.cargo"
pathmunge "${CARGO_HOME}/bin"

# The path for basictex is set from `/etc/paths.d/TeX` file, but as we are
# constructing the PATH on our own, we need to add it here.
pathmunge "/Library/TeX/texbin" after

# Local build of Neovim nightly
pathmunge "${HOME}/neovim/bin"

unset pathmunge

# }}}
# HISTORY {{{
#
# Sane history defaults: https://www.soberkoder.com/unlimited-bash-history/

# Default bash history file
export HISTFILE="${HOME}/.bash_history"
# Increase Bash history size. For unlimited history, set this to -1.
export HISTSIZE='99999'
export HISTFILESIZE="${HISTSIZE}"
export HISTTIMEFORMAT="[%F %T] "
# Omit duplicates and commands that begin with a space from history.
export HISTCONTROL='ignoreboth'

# Merge the history of all terminals and make it available for every terminal.
#
# -a: append history lines from this session to the history file
# -c: clear the history list by deleting all the entries
# -r: read the history file and append the contents to the history list
#
# 'history list': history lines entered since the beginning of the current
# bash session (kind of temporary buffer)
PROMPT_COMMAND="history -a; history -c; history -r; ${PROMPT_COMMAND}"

# }}}
# LESS {{{

# Highlight section titles in manual pages.
# Colors for less
# ------ ANSI codes ------
# Black            \e[0;30m
# Blue             \e[0;34m
# Green            \e[0;32m
# Cyan             \e[0;36m
# Red              \e[0;31m
# Purple           \e[0;35m
# Brown            \e[0;33m
# Gray             \e[0;37m
# Dark Gray        \e[1;30m
# Light Blue       \e[1;34m
# Light Green      \e[1;32m
# Light Cyan       \e[1;36m
# Light Red        \e[1;31m
# Light Purple     \e[1;35m
# Yellow           \e[1;33m
# White            \e[1;37m
export LESS_TERMCAP_mb=$'\e[1;31m'     # begin bold
export LESS_TERMCAP_md=$'\e[1;36m'     # begin blink
export LESS_TERMCAP_me=$'\e[0m'        # reset bold/blink
export LESS_TERMCAP_so=$'\e[1;33m'     # begin reverse video
export LESS_TERMCAP_se=$'\e[0m'        # reset reverse video
export LESS_TERMCAP_us=$'\e[1;32m'     # begin underline
export LESS_TERMCAP_ue=$'\e[0m'        # reset underline

# LESS defaults
# X - leave content on-screen
# F - quit automatically if less than one screenfull
# R - raw terminal characters
# i - ignore case in search pattern. This option is ignored if it contains
#     uppercase characters
# J - Show status column at the left edge of the screen
export LESS='-X -F -R -i -J -W --tabs=4 --window=4'

# }}}
# HOMEBREW {{{

# Opt-out of homebrew's analytics
export HOMEBREW_NO_ANALYTICS=1
# Do not create the lock file on `brew bundle`
export HOMEBREW_BUNDLE_NO_LOCK=1
export HOMEBREW_BUNDLE_FILE="${HOME}/dotfiles/lib/Brewfile"

# }}}
# NNN {{{

# nnn options
# -d : detail mode
# -D : show directories in context color with NNN_FCOLORS set
# -e : open text files in $VISUAL (else $EDITOR, fallback vi) [preferably CLI]
# -E : use $EDITOR for internal undetached edits
# -H : show hidden files (toggled with '.')
# -u : use selection if available, don't prompt to choose between selection and hovered entry
# -U : show user and group names in status bar
export NNN_OPTS="dDeHuU"
export NNN_FIFO=/tmp/nnn.fifo

# nnn plugins
# - To run a plugin, press ; followed by the key or Alt+key
# - To skip directory refresh after running a plugin, prefix with -
# - To assign keys to arbitrary non-background non-shell-interpreted cli
#   commands and invoke like plugins, add ! (bang) before the command.
#
# shellcheck disable=SC2016 # (we don't want expansion for $nnn)
NNN_SHELL_PLUGINS='l:-!git log;x:!chmod +x $nnn'
NNN_PLUGINS='p:preview-tui-ext;c:fzcd;o:fzopen'
export NNN_PLUG="$NNN_PLUGINS;$NNN_SHELL_PLUGINS"
unset NNN_SHELL_PLUGINS NNN_PLUGINS

# }}}
# FZF {{{

# Fzf configuration
export FZF_DEFAULT_COMMAND='fd --type f --hidden --exclude .git'
export FZF_DEFAULT_OPTS='
  --height=50%
  --layout=reverse
  --info=inline
  --prompt="❯ "
  --bind=ctrl-p:toggle-preview
  --color fg:#ebdbb2,bg:#282828,hl:#fabd2f,fg+:#ebdbb2,bg+:#3c3836,hl+:#fabd2f
  --color info:#83a598,prompt:#bdae93,spinner:#fabd2f,pointer:#83a598,marker:#fe8019,header:#665c54'

# Molokai for fzf
# --color fg:252,bg:233,hl:67,fg+:252,bg+:235,hl+:81
# --color info:144,prompt:161,spinner:135,pointer:135,marker:118

export FZF_CTRL_R_OPTS="
  --prompt='History ❯ '
  --preview 'echo {}'
  --preview-window down:3:wrap
  --bind 'ctrl-y:execute-silent(echo -n {2..} | pbcopy)+abort'
  --color header:italic
  --header 'Press CTRL-Y to copy command into clipboard'"

export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_CTRL_T_OPTS="
  --prompt='Files ❯ '
  --preview 'bat --color=always --line-range :300 {}'"

export FZF_ALT_C_COMMAND='fd --type d . --hidden --exclude .git'
export FZF_ALT_C_OPTS="
  --prompt='CD ❯ '
  --preview 'tree -C {} | head -100'"

# }}}
# MISC {{{

# For docker-compose (internetarchive/openlibrary)
# export COMPOSE_FILE="docker-compose.yml:docker-compose.override.yml:docker-compose.infogami-local.yml"

# Disable pyenv virtualenv prompt
export PYENV_VIRTUALENV_DISABLE_PROMPT=1

# Make Python use UTF-8 encoding for output to stdin, stdout, and stderr.
export PYTHONIOENCODING='UTF-8'

# Hide the “default interactive shell is now zsh” warning on macOS.
export BASH_SILENCE_DEPRECATION_WARNING=1

# Make Neovim the default editor.
export EDITOR='nvim'
export VISUAL="$EDITOR"

# Prefer US English and use UTF-8.
export LANG='en_US.UTF-8'
export LC_ALL='en_US.UTF-8'

# Avoid issues with `gpg` as installed via Homebrew.
# https://stackoverflow.com/a/42265848/96656
TTY=$(tty)
export GPG_TTY=$TTY
unset TTY

# }}}

# vim: foldmethod=marker

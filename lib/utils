#!/usr/bin/env bash

BOLD="\e[1m"
RESET_ALL="\e[0m"
GREEN="\e[32m"
RED="\e[35m"
YELLOW="\e[1;33m"

# Header logging
function header() {
    echo -e "\n${BOLD}==> $* ${RESET_ALL}"
}

# Success logging
function success() {
    echo -e "${GREEN}âœ“ $* ${RESET_ALL}"
}

# Error logging
function error() {
    echo -e "${RED}x $* ${RESET_ALL}"
}

# Warning logging
function warning() {
    echo -e "${YELLOW}! $* ${RESET_ALL}"
}

# Ask for confirmation before proceeding
function seek_confirmation() {
    printf "\n"
    warning "$@"
    read -rp "Continue? (y/n) " -n 1
    printf "\n"
}

# Test whether the result of an 'ask' is a confirmation
function is_confirmed() {
    if [[ "$REPLY" =~ ^[Yy]$ ]]; then
      return 0
    fi
    return 1
}

# Test whether we're in a git repo
function is_git_repo() {
    git rev-parse --is-inside-work-tree &> /dev/null
}

# Test whether a command exists
# $1 - cmd to test
function type_exists() {
    if type -P "$1" > /dev/null; then
      return 0
    fi
    return 1
}

# Test whether a Homebrew formula is already installed
# $1 - formula name (may include options)
function formula_exists() {
    if brew list "$1" &> /dev/null; then
        return 0
    fi
    return 1
}

# Check whether the first argument is present in the 
# array which is the second argument
function contains_element() {
    local element match=$1
    # shift the argument list by 1 to the left 
    # dropping the first argument
    shift
    # for without an in implicitly iterates over the
    # argument list
    for element; do
        if [[ "${element}" == "${match}" ]]; then
            return 0
        fi
    done
    return 1
}


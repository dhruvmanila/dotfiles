#!/usr/bin/env python3
from __future__ import annotations

import os
import sys
from pathlib import Path

if (dotfiles := os.getenv("DOTFILES")) is not None:
    CONFIG_DIR = Path(dotfiles) / "config"
else:
    CONFIG_DIR = Path("~/dotfiles/config")

REQUIRED_DIRECTORIES = [
    "~/.config/gh",
    "~/.gnupg",
    "~/.ipython/profile_default",
    "~/.jupyter/lab",
    "~/.ssh",
    "~/contributing",
    "~/git",
    "~/neovim",
    "~/playground",
    "~/projects",
    "~/work",
]

SYMLINKS: dict[str, dict[str, str]] = {
    "common": {
        "~/.editorconfig": ".editorconfig",
        "~/.bash_profile": "bash/bash_profile",
        "~/.bashrc": "bash/bashrc",
        "~/.config/bat": "bat",
        "~/.config/bpytop": "bpytop",
        "~/.config/gh/config.yml": "gh/config.yml",
        "~/.gitconfig": "git/config",
        "~/.gitmessage": "git/message",
        "~/.gnupg/gpg-agent.conf": "gpg/gpg-agent.conf",
        "~/.gnupg/gpg.conf": "gpg/gpg.conf",
        "~/.config/grip": "grip",
        "~/.config/himalaya": "himalaya",
        "~/.config/htop": "htop",
        "~/.inputrc": "inputrc",
        "~/.ipython/profile_default/ipython_config.py": "ipython/ipython_config.py",
        "~/.ipython/profile_default/startup": "ipython/startup",
        "~/.jupyter/jupyter_lab_config.py": "jupyter/jupyter_lab_config.py",
        "~/.jupyter/jupyter_notebook_config.py": "jupyter/jupyter_notebook_config.py",
        "~/.jupyter/lab/user-settings": "jupyter/lab/user-settings",
        "~/.config/kitty": "kitty",
        "~/.config/nvim": "nvim",
        "~/.config/pip": "pip",
        "~/.ssh/config": "ssh/config",
        "~/.config/starship.toml": "startship.toml",
        "~/.tmux.conf": "tmux/tmux.conf",
        "~/.vim": "vim",
        "~/.vimrc": "vim/vimrc",
        "~/.config/youtube-dl": "youtube-dl",
        "~/.zshenv": "zsh/zshenv",
        "~/.zshrc": "zsh/zshrc",
    },
    "macos": {
        "~/Library/Application Support/bottom": "bottom",
        "~/Library/Preferences/glow": "glow",
        "~/.hammerspoon": "hammerspoon",
        "~/.config/karabiner": "karabiner",
        "~/Library/Application Support/pypoetry": "pypoetry",
    },
    "linux": {},
}


def create_required_directories() -> None:
    """Create all the required directories."""
    for dirpath in REQUIRED_DIRECTORIES:
        dir = Path(dirpath)
        if not dir.exists():
            print(f"==> mkdir: {dir}")
            dir.mkdir(parents=True)


def create_symlinks(links: dict[str, str]) -> None:
    """Create all the symlinks using the given mapping where the key is the symlink
    path and value is the target.

    The target path should be relative to the dotfiles config directory which is
    either the `DOTFILES` environment variable suffixed with `config` or `~/dotfiles/config`.
    """
    for linkpath, target in links.items():
        link = Path(linkpath)
        if not link.is_symlink():
            print(f"==> {link} -> {target}")
            link.symlink_to(CONFIG_DIR / target)


if __name__ == "__main__":
    create_required_directories()

    create_symlinks(SYMLINKS["common"])
    if sys.platform == "darwin":
        create_symlinks(SYMLINKS["macos"])
    elif sys.platform == "linux":
        create_symlinks(SYMLINKS["linux"])

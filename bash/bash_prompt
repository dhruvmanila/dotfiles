#!/usr/bin/env bash


prompt_git() {
	local s='';
	local branchName='';

	# Check if the current directory is in a Git repository.
	git rev-parse --is-inside-work-tree &>/dev/null || return;

	# Check for what branch we’re on.
	# Get the short symbolic ref. If HEAD isn’t a symbolic ref, get a
	# tracking remote branch or tag. Otherwise, get the
	# short SHA for the latest commit, or give up.
	branchName="$(git symbolic-ref --quiet --short HEAD 2> /dev/null || \
		git describe --all --exact-match HEAD 2> /dev/null || \
		git rev-parse --short HEAD 2> /dev/null || \
		echo '(unknown)')";

	# Early exit for Chromium & Blink repo, as the dirty check takes too long.
	# Thanks, @paulirish!
	# https://github.com/paulirish/dotfiles/blob/dd33151f/.bash_prompt#L110-L123
	repoUrl="$(git config --get remote.origin.url)";
	if grep -q 'chromium/src.git' <<< "${repoUrl}"; then
		s+='*';
	else
		# Check for uncommitted changes in the index.
		if ! git diff --quiet --ignore-submodules --cached; then
			s+='+';
		fi;

		# Check for unstaged changes.
		if ! git diff-files --quiet --ignore-submodules --; then
			s+='!';
		fi;

		# Check for untracked files.
		if [ -n "$(git ls-files --others --exclude-standard)" ]; then
			s+='?';
		fi;

		# Check for stashed files.
		if git rev-parse --verify refs/stash &>/dev/null; then
			s+='$';
		fi;
	fi;

	[ -n "${s}" ] && s=" [${s}]";

	echo -e "${1}${branchName}${2}${s}";
}

bold='';
reset="\e[0m";
# black="\e[0;30m";
blue="\e[0;34m";
# cyan="\e[0;36m";
green="\e[0;32m";
orange="\e[0;33m";
# purple="\e[1;35m";
red="\e[0;31m";
violet="\e[0;35m";
white="\e[1;37m";
yellow="\e[1;33m";

# Highlight the user name when logged in as root.
if [[ "${USER}" == "root" ]]; then
	userStyle="${red}";
else
	userStyle="${orange}";
fi;

# Highlight the hostname when connected via SSH.
if [[ "${SSH_TTY}" ]]; then
	hostStyle="${bold}${red}";
else
	# shellcheck disable=SC2034
	hostStyle="${yellow}";
fi;

# Set the terminal title and prompt.
PS1="\[\033]0;\u@\h: \w\007\]"; # title - username@hostname: full working directory
PS1+="\\[${bold}\\]\\n"; # newline
PS1+="\\[${blue}\\]\\t: ";  # time

# show username only if its root
if [[ ${USER} == "root" ]]; then
	PS1+="\\[${userStyle}\\]\\u";
    # show hostname only if it's not local
    if [[ "${SSH_TTY}" ]]; then
        PS1+="\[${white}\] at ";
        PS1+="\[${hostStyle}\]\h";
    fi
	PS1+="\\[${white}\\] in ";
fi

PS1+="\\[${green}\\]\\w"; # working directory full path
PS1+="\$(prompt_git \"\[${white}\] on \[${violet}\]\" \"\[${blue}\]\")"; # Git repository details
PS1+="\\n";
PS1+="\\[${white}\\]\$ \\[${reset}\\]"; # `$` (and reset color)
export PS1;

PS2="\\[${yellow}\\]→ \\[${reset}\\]";
export PS2;

# Key-bindings
#
# NOTE:
# bind-key -r ...: This key may repeat (see repeat-time option)
# bind-key -n ...: binds the key in the root table
# bind-key    ...: binds the key in the prefix table
#
# :list-keys => to list out all the keys
#
# If a key is bind in the root table, you don't have to press the prefix key before
# pressing the actual key. Be careful!

# Remap prefix from C-b to C-a
# Alternative: C-space
unbind-key C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# prefix-r to reload the config file
unbind-key r
bind-key r source-file ~/.tmux.conf \; display-message "Reloaded ~/.tmux.conf"

# Sensible splits for panes
#
# '\': vertical split
# '-': horizontal split
# '|': full width vertical split
# '_': full width horizontal split
unbind-key '"'
unbind-key %
bind-key "\\" split-window -h -c "#{pane_current_path}"
bind-key | split-window -f -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"
bind-key _ split-window -f -v -c "#{pane_current_path}"

# Move between panes with vi keys
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Move panes around the current window. Use Prefix-q to list pane numbers.
bind-key -r J swap-pane -D
bind-key -r K swap-pane -U

# Easy resizing of panes
bind-key -r C-j resize-pane -D 5
bind-key -r C-k resize-pane -U 5
bind-key -r C-h resize-pane -L 5
bind-key -r C-l resize-pane -R 5

# Easier and faster switching between next/prev window
bind-key C-p previous-window
bind-key C-n next-window

# Window moving
bind-key -r ">" swap-window -d -t +1
bind-key -r "<" swap-window -d -t -1

# Fast toggle between current and last-used window (normally prefix-l).
# This is inidicated by a '-' in the statusbar.
#
# prefix-space is next-layout by default but I'm not a heavy splits user.
bind-key C-Space last-window
bind-key Space last-window

# Enter copy mode
# bind-key Escape copy-mode

# Copy mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection

# Disable copying through mouse selection
unbind-key -T copy-mode-vi MouseDragEnd1Pane
bind-key -T copy-mode-vi MouseDown1Pane send -X clear-selection

# For those times when C-c and q are not enough.
bind-key -T copy-mode-vi Escape send-keys -X cancel

# Incremental search
bind-key -T copy-mode-vi / command-prompt -i -p "search down" "send -X search-forward-incremental \"%%%\""
bind-key -T copy-mode-vi ? command-prompt -i -p "search up" "send -X search-backward-incremental \"%%%\""

# Options

# Term info should refer to the $TERM type of the emulator.
set-option -g default-terminal "${TERM}"

# Vim keys in copy-mode
set-option -w -g mode-keys vi

# Set mouse mode on
set-option -g mouse on

# Renumber windows on close
set-option -g renumber-windows on

# Use multiple commands without sending the prefix-key within 1 second
# (default is 500 ms).
set-option -g repeat-time 1000

# Increase scrollback buffer size
set-option -g history-limit 50000

# tmux messages are displayed for 1 seconds
set-option -g display-time 1000

# Display pane numbers for 4 seconds
set-option -g display-panes-time 4000

# Make tmux play nicely with vim
set-option -g focus-events on

# Start window numbers at 1 to match keyboard order with tmux order
set-option -g base-index 1

# Start pane numbers at 1 to match keyboard order with tmux order
set-option -w -g pane-base-index 1

# Address vim mode switching delay
# Ref: http://superuser.com/a/252717/65504
set-option -sg escape-time 0

# Turn off automatic renaming for the window to reduce CPU load
set-option -w -g automatic-rename off

# Show the status bar
#
# We can adjust the height of the status bar by passing in a number instead.
# The limit is 5
set-option -g status on

# Set the position of the window list in the status line
# Available: left, right, centre, absolute-centre
set-option -g status-justify absolute-centre

# Update the status line every interval seconds. A setting of zero disables
# redrawing at interval.
set-option -g status-interval 5

# emacs key bindings in tmux command prompt (prefix + :) are better than vi keys,
# even for vim users.
set-option -g status-keys emacs

# Color of the status line
#
# The background color of the status line is going to be the same and will be
# overriden by individual portion in `status-left` and `status-right` option.
set-option -g status-style "bg=#32302f"

# If you want to apply the same style all over the left part or the right part
# of the status line, you can use `status-left-style` or `status-right-style`.
#
# We will set it to 'none' as we are setting the style for individual 'portion'
# in the `status-left` and `status-right` option.
set-option -g status-left-style none
set-option -g status-right-style none

# By default, the length is 10 and 40 for left and right side respectively.
# We will make it even and increase the length to fit more components.
set-option -g status-left-length 100
set-option -g status-right-length 100

# From `man tmux /message-command-style`:
#
#   > `message-style` is used for messages and for the command prompt.
#   > `message-command-style` is used for the command prompt with vi keys when
#   > in command mode.
#
# If we are using vi keys in the command prompt, we can keep the styles separate
# as an indication, but as we are using emacs keys we will keep the style same.
set-option -g message-style "fg=#ebdbb2,bg=#504945"
set-option -g message-command-style "fg=#ebdbb2,bg=#504945"

# Colors of *borders* of focused and non-focused panes.
set-option -g pane-border-style "fg=#504945"
set-option -g pane-active-border-style "fg=#a89984"

# Set the contents of the status line
# '#S': session name
set-option -g  status-left "#[fg=#282828,bg=#a89984,bold] #S "

# We can break the long string and use the `-a` flag to append.
set-option -g  status-right "#[fg=#ebdbb2,bg=#32302f]"
# set-option -ga status-right " #(~/dotfiles/tmux/scripts/music.sh) "

# A conditional:
#
#     `#{?test,val1,val2}`
#
# They can be chained as well. We are using it to show:
# - if the prefix key was pressed
# - are we in copy mode
# - is the rectangle toggle on
# - is the current window zoomed
set-option -ga status-right "\
#{?client_prefix,#[fg=black]#[bg=yellow] PREFIX,\
#{?rectangle_toggle,#[fg=black]#[bg=blue] C-BLOCK,\
#{?pane_in_mode,#[fg=black]#[bg=blue] COPY,\
#{?window_zoomed_flag,#[fg=black]#[bg=green] ZOOMED,}}}} "

set-option -ga status-right "#[fg=#ebdbb2,bg=#504945] %a %d %b "
set-option -ga status-right "| %H:%M "
set-option -ga status-right "| #(~/dotfiles/tmux/scripts/battery.sh) "
set-option -ga status-right "#[fg=#282828,bg=#a89984,bold] #H "

# Sets the separator drawn between windows in the status line. The default is a
# single space character.
set-option -gw window-status-separator ""

# Set what to display for the current window (then for the other ones), and how,
# in the status line window list.
#
# '#I': window index
# '#W': window name
# '#F': window flags like '*' for current window, 'Z' for zoomed window, etc.
set-option -gw window-status-format "#[default] #I: #W #F "
set-option -gw window-status-current-format "#[fg=#ebdbb2,bg=#504945] #I: #W #F "

# Plugins
#
# Press prefix + I (capital i, as in Install) to fetch the plugin.
# Press prefix + alt + u (lowercase u as in uninstall) to remove the plugin.
# Press prefix + U (capital u as in Update) to update the plugin.

set-option -g @plugin 'tmux-plugins/tpm'
set-option -g @plugin 'tmux-plugins/tmux-resurrect'
set-option -g @plugin 'tmux-plugins/tmux-continuum'

# Default binding is: prefix (Alt + u) (lowercase u)
if-shell '[[ -f ~/.tmux/plugins/tpm/bindings/clean_plugins ]]' \
    'bind-key -T prefix C run-shell ~/.tmux/plugins/tpm/bindings/clean_plugins'

# Plugin settings

set-option -g @continuum-save-interval '10'

# Initialize TMUX plugin manager
# (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
